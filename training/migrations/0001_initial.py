# Generated by Django 3.0.9 on 2020-12-18 10:35

import common.mixins
import common.upload_paths
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('index', models.IntegerField()),
                ('name', models.CharField(max_length=512)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('thumbnail', models.FileField(blank=True, upload_to=common.upload_paths.get_upload_to_hashed_path)),
                ('is_published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('index', models.IntegerField()),
                ('name', models.CharField(max_length=512)),
                ('slug', models.SlugField(unique=True)),
                ('text', models.TextField(blank=True)),
                ('is_free', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['index', 'name'],
            },
            bases=(common.mixins.StaticThumbnailURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SectionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=512, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('summary', models.TextField()),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('type', models.TextField(choices=[('workshop', 'Workshop'), ('course', 'Course')])),
                ('difficulty', models.TextField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')])),
                ('picture_header', models.FileField(blank=True, upload_to=common.upload_paths.get_upload_to_hashed_path)),
                ('thumbnail', models.FileField(blank=True, upload_to=common.upload_paths.get_upload_to_hashed_path)),
            ],
            options={
                'ordering': ['-date_created'],
            },
            bases=(common.mixins.StaticThumbnailURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TrainingFlatPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='It will be displayed as the section name in the navigation bar.', max_length=50, verbose_name='Page title')),
                ('slug', models.SlugField(blank=True, help_text='The page slug has to be unique per training. If it is not filled, it will be the slugified page title.', verbose_name='Page slug')),
                ('content', models.TextField(blank=True, help_text='\n<p>Format the content in <a href="https://commonmark.org/help/">Markdown</a>.</p>\n<div>\n    <p>\n        To make images float left or right of the text, use the following:\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-left\'}\n        </code>\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-right\'}\n        </code>\n    </p>\n</div>\n')),
                ('html_content', models.TextField(blank=True, editable=False)),
                ('header', models.FileField(blank=True, upload_to=common.upload_paths.get_upload_to_hashed_path)),
            ],
            bases=(common.mixins.StaticThumbnailURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserSectionProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('started', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='training.Section')),
            ],
        ),
    ]
