# Generated by Django 3.0.14 on 2021-10-18 12:51

import common.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('static_assets', '0009_more_track_language_choices'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('comments', '0002_auto_20201218_1135'),
        ('films', '0005_film_production_credits'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_published', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=512)),
                ('slug', models.SlugField(unique=True)),
                ('view_count', models.PositiveIntegerField(default=0, editable=False)),
                ('is_published', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=False)),
                ('film', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='films.Film')),
            ],
            options={
                'ordering': ['order', '-date_published'],
            },
            bases=(common.mixins.StaticThumbnailURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CharacterVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('number', models.IntegerField()),
                ('min_blender_version', models.CharField(choices=[('2.70', 'V270'), ('2.80', 'V280'), ('2.90', 'V290'), ('3.0', 'V300')], db_index=True, max_length=5)),
                ('description', models.TextField(blank=True, help_text='\n<p>Format the content in <a href="https://commonmark.org/help/">Markdown</a>.</p>\n<div>\n    <p>\n        To make images float left or right of the text, use the following:\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-left\'}\n        </code>\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-right\'}\n        </code>\n    </p>\n</div>\n')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='characters.Character')),
            ],
            options={
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='characters.Character')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liked_characters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CharacterVersionComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.CharacterVersion')),
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comments.Comment')),
            ],
        ),
        migrations.AddField(
            model_name='characterversion',
            name='comments',
            field=models.ManyToManyField(related_name='character_version', through='characters.CharacterVersionComment', to='comments.Comment'),
        ),
        migrations.AddField(
            model_name='characterversion',
            name='static_asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_versions', to='static_assets.StaticAsset'),
        ),
        migrations.CreateModel(
            name='CharacterShowcase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('min_blender_version', models.CharField(choices=[('2.70', 'V270'), ('2.80', 'V280'), ('2.90', 'V290'), ('3.0', 'V300')], db_index=True, max_length=5)),
                ('description', models.TextField(blank=True, help_text='\n<p>Format the content in <a href="https://commonmark.org/help/">Markdown</a>.</p>\n<div>\n    <p>\n        To make images float left or right of the text, use the following:\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-left\'}\n        </code>\n    </p>\n    <p>\n        <code>\n        {attachment AttachmentID class=\'float-right\'}\n        </code>\n    </p>\n</div>\n')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='showcases', to='characters.Character')),
                ('static_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='character_showcase', to='static_assets.StaticAsset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('user', 'character'), name='only_one_like_per_character_and_user'),
        ),
    ]
