# Generated by Django 3.0.9 on 2020-12-18 10:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('films', '0002_auto_20201218_1135'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('static_assets', '0002_auto_20201218_1135'),
        ('comments', '0002_auto_20201218_1135'),
    ]

    operations = [
        migrations.AddField(
            model_name='productionlogentry',
            name='author',
            field=models.ForeignKey(blank=True, help_text='The actual author of the assets in the production log entry', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authored_log_entries', to=settings.AUTH_USER_MODEL, verbose_name='author (optional)'),
        ),
        migrations.AddField(
            model_name='productionlogentry',
            name='production_log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log_entries', to='films.ProductionLog', verbose_name='production log'),
        ),
        migrations.AddField(
            model_name='productionlogentry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='uploaded_log_entries', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='productionlog',
            name='author',
            field=models.ForeignKey(blank=True, help_text='The actual author of the summary in the production log', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authored_production_logs', to=settings.AUTH_USER_MODEL, verbose_name='author (optional)'),
        ),
        migrations.AddField(
            model_name='productionlog',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_logs', to='films.Film'),
        ),
        migrations.AddField(
            model_name='productionlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='uploaded_production_logs', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='like',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='films.Asset'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liked_assets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='filmflatpage',
            name='attachments',
            field=models.ManyToManyField(blank=True, to='static_assets.StaticAsset'),
        ),
        migrations.AddField(
            model_name='filmflatpage',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flatpages', to='films.Film'),
        ),
        migrations.AddField(
            model_name='filmcrew',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Film'),
        ),
        migrations.AddField(
            model_name='filmcrew',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='film_crew', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='film',
            name='crew',
            field=models.ManyToManyField(through='films.FilmCrew', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to='films.Film'),
        ),
        migrations.AddField(
            model_name='collection',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_collections', to='films.Collection'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assetcomment',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='films.Asset'),
        ),
        migrations.AddField(
            model_name='assetcomment',
            name='comment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='comments.Comment'),
        ),
        migrations.AddField(
            model_name='asset',
            name='attachments',
            field=models.ManyToManyField(blank=True, related_name='_asset_attachments_+', to='static_assets.StaticAsset'),
        ),
        migrations.AddField(
            model_name='asset',
            name='collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='films.Collection'),
        ),
        migrations.AddField(
            model_name='asset',
            name='comments',
            field=models.ManyToManyField(related_name='asset', through='films.AssetComment', to='comments.Comment'),
        ),
        migrations.AddField(
            model_name='asset',
            name='film',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='films.Film'),
        ),
        migrations.AddField(
            model_name='asset',
            name='static_asset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='static_assets.StaticAsset'),
        ),
        migrations.AddField(
            model_name='asset',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('user', 'asset'), name='only_one_like_per_asset_and_user'),
        ),
        migrations.AddConstraint(
            model_name='filmflatpage',
            constraint=models.UniqueConstraint(fields=('slug', 'film'), name='unique_film_flat_page_url'),
        ),
        migrations.AlterUniqueTogether(
            name='filmcrew',
            unique_together={('user', 'film')},
        ),
    ]
